Package: vim-snipmate
Description-md5: b32d99279c72a1dbfce80f206863cd65
Description-be: Vim script that implements some of TextMate's snippets features.
 SnipMate.vim aims to be an unobtrusive, concise vim script that implements
 some of TextMate's snippets features in Vim. A snippet is a piece of
 often-typed text that you can insert into your document using a trigger
 word followed by a <tab>.
 .
 For instance, in a C file using the default installation of snipMate.vim,
 if you type "for<tab>" in insert mode, it will expand a typical for loop
 in C:
 .
 for (i = 0; i < count; i++) {
 .
 Project-Id-Version: ddtp-ubuntu
 Report-Msgid-Bugs-To: FULL NAME <EMAIL@ADDRESS>
 PO-Revision-Date: 2021-10-06 08:00+0000
 Last-Translator: FULL NAME <EMAIL@ADDRESS>
 Language-Team: Belarusian <be@li.org>
 MIME-Version: 1.0
 Content-Type: text/plain; charset=UTF-8
 Content-Transfer-Encoding: 8bit
 X-Launchpad-Export-Date: 2021-10-07 09:15+0000
 X-Generator: Launchpad (build d41d323cd49b34518b2141c77ec7b2f852e5f261)
 .
 To go to the next item in the loop, simply <tab> over to it; if there is
 repeated code, such as the "i" variable in this example, you can simply
 start typing once it's highlighted and all the matches specified in the
 snippet will be updated.
 .
 snipMate.vim has the following features among others:
 .
  - The syntax of snippets is very similar to TextMate's, allowing easy
    conversion.
  - The position of the snippet is kept transparently (i.e., it does not use
    marks/placeholders inserted into the buffer), allowing you to escape out
    of an incomplete snippet, something particularly useful in Vim.
  - Variables in snippets are updated as-you-type.
  - Snippets can have multiple matches.
  - Snippets can be out of order. For instance, in a do...while loop, the
    condition can be added before the code.


